- key: walkaide
  title: The Design and Evaluation of Haptic Feedback Methods and Environmental Impacts on a Wearable Navigation System
  toc_title: Robotic Walk-Aide
  status: past
  start_date: "2024-09-18"
  end_date: "2025-05-03"
  stack: 
    - ROS Noetic
    - RTAB-Map (RGB-D VSLAM)
    - Hector-SLAM (LiDAR prototype)
    - Intel RealSense D435i
    - Arduino Nano 33 BLE
    - LattePanda Delta 3
    - Python (PCL, custom ROS nodes)
    - EEG logging
  summary_short: >
    A wearable robotic navigation system with haptic feedback and EEG logging, 
    designed for visually impaired navigation and evaluated through controlled trials.
  case_study:
    background: >
      Navigation assistance for visually impaired individuals often relies on canes or GPS-based 
      systems, which can struggle in indoor, cluttered, or unstructured environments. This project 
      aimed to design a wearable robotic aid combining RGB-D vision, real-time mapping, and 
      haptic feedback, while also testing how different haptic feedback strategies and environmental 
      conditions affect usability and cognitive load.
    methods: >
      The system used an Intel RealSense D435i RGB-D camera for depth perception, ROS Noetic for 
      mapping/localisation, and Arduino-driven actuators for haptic cues. Two haptic feedback 
      strategies were implemented and compared: (i) a compass system applying directional pressure 
      with a fixed back reference point, and (ii) a pulling system tightening shoulder straps. EEG 
      logging synchronised haptic and motor events with brain activity for workload analysis.
    experiments: >
      Four participants were tested in controlled indoor environments with and without patterned 
      walls to investigate the effect of visual texture on VSLAM performance and user outcomes. 
      Each participant trialled both haptic feedback systems while reaction times, collision frequency, 
      odometry loss, and success rates were recorded.
    results: >
      The compass system consistently outperformed the pulling system, achieving higher success 
      rates (83–77% vs. 50–66%), fewer collisions (0–0.42 vs. up to 1.17 per trial), lower odometry 
      losses, and faster average reaction times (3.43–3.67s vs. ~4.5–4.9s). Qualitative feedback 
      indicated compass cues were clearer, though the pulling system was more comfortable. 
      Patterned walls improved mapping stability, but rapid turns remained a failure mode for VSLAM.
    limitations: >
      The study involved only four participants, and actuator torque limits reduced cue intensity. 
      VSLAM performance degraded during rapid motion, and haptic comfort was not deeply optimised. 
      EEG logging was implemented, but a full statistical analysis of cognitive load was not completed 
      within the project timeframe.
    future_work: >
      Future improvements include stronger actuators, adaptive haptic intensity based on user 
      response, multi-camera fusion for robust mapping, and larger-scale trials to validate 
      statistical significance. EEG-based workload metrics should be fully analysed to strengthen 
      insights into usability.
  repo_url: https://github.com/tyecam1/Mechatronic-Walkaide
  image: /assets/img/walkaide.png
  gallery:
    - /assets/img/walkaide-system.png
    - /assets/img/walkaide-experiment.png
    - /assets/img/walkaide-results.png
  featured: true


- key: anymal-sumo 
  toc_title: RL Quadruped Sumo Tournament
  title: Reinforcement Learning-Based Control of a Quadruped Agent in a Simulated Sumo Arena
  status: past
  start_date: "2023-08-16"
  end_date: "2024-01-05"
  stack: [PyTorch, RaisimGym, NumPy, Cuda, PPO]
  summary_short: >
    Competitive ANYmal robot control in a class sumo tournament using PPO and curriculum learning, delivered as part
    of Prof. Jemin Hwangbo’s Reinfocement Learning-based control module at KAIST.
  summary_long: >
    Agents were trained in raisimGym to compete head-to-head in a sumo-style arena. The project
    built on formal teaching of on-policy vs off-policy methods, Q-functions, policy gradients, and
    SGD/Adam optimisation. I implemented a PPO baseline and curriculum scheduling to improve robustness,
    yielding behaviours such as a leap attack that proved decisive in the class tournament. Results
    included learning curves, trajectory visualisations, and reproducible configs.
  repo_url: https://github.com/tyecam1/KAIST-Anymal-Sumo
  image: /assets/img/anymal-sumo.png
  featured: true

- key: fem-wing
  title: Finite Element Method Solver for 2D Wing Stress, Geometry and Material Property Optimisation
  toc_title: Custom FEA Solver
  status: past
  start_date: "2024-09-01"
  end_date: "2024-12-12"
  stack: [Python, NumPy, SciPy, Matplotlib, PyVista, Gmsh]
  summary_short: >
    A custom 2D wing-section FEA solver built in Python: geometry generation; Gmsh meshing;
    quadrature-based assembly; stress and deformation visualisation and geometry/material optimisation.
  summary_long: >
    The package implements a full FEA pipeline with orthotropic elasticity, Gaussian quadrature,
    sparse global assembly, Dirichlet boundary conditions at the root, and stress recovery
    (principal, Von Mises, shear). Differential-evolution explores geometric angles (θ, ϕ) and
    material parameters (E1, E2, G12); multiprocessing parallelises evaluations over design points.
    Outputs include ParaView VTK files, sparsity plots, and eigenmode analysis for bending/torsion.
  repo_url: https://github.com/tyecam1/AircraftWing-FEM-Solver
  image: /assets/img/fem-wing.png
  featured: true

- key: rl-sim-pipeline
  title: Integrated RL Simulation & Telemetry Platform
  toc_title: RL Simulation & Telemetry Platform
  status: current
  start_date: "2025-09-01"
  stack: [Python, PyTorch, Gymnasium, NumPy, Matplotlib, Flask/Streamlit, Plotly, WebSocket, Unity-MLAgents, PyBullet]
  summary_short: >
    An end-to-end RL platform unifying gridworld and 3D tasks with PPO training, live telemetry
    (web dashboard), and reproducible evaluation with saved rollouts, plots, and videos.
  summary_long: >
    The pipeline standardises env interfaces (reset/step/render), provides tabular and PPO baselines,
    streams metrics and frames to a Flask/Streamlit dashboard via WebSockets, and stores artefacts
    (checkpoints, logs, figures, videos) under timestamped runs. Config-driven experiments ensure
    determinism and comparability across 2D/3D tasks.
  repo_url:
  #image: /assets/img/rl-sim-pipeline.png
  featured: false

- key: hybrid-tidal-wind
  title: A Feasability-Aware Portfolio for the Design & Installation of a Hybrid Tidal & Wind Farm in the Severn Estuary
  toc_title: Energy Park Design
  status: past
  start_date: "2024-09-18"
  end_date: "2025-05-01"
  stack: [Python, MATLAB, Renewable Energy, Sustainability Analysis]
  summary_short: >
    Assessed the feasibility of tidal and wind arrays in the Severn Estuary, from resource assessment to turbine design, topographic optimisation and the overall levelised cost of energy.
  summary_long: >
    Site feasibility was built from bathymetry of the Severn Estuary and wind data from the Bristol
    Channel. My contributions: (1) modelling tidal and wind array performance to maximise capture
    and reliability, (2) designing a condition-monitoring strategy to reduce O&M, and
    (3) LCOE analysis benchmarking economic viability under grid constraints. Simulations compared
    capacity factor, downtime resilience, and layout variants; results support the potential of
    marine + wind renewables for industrial repowering in the region.
  repo_url:
  image: /assets/img/tidal-array.png
  featured: true
